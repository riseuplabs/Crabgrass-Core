-
-  mode = 'share' if mode.nil? # either 'share' or 'notify'
-  add_button_id = 'add_recipient_button'
-  access_value = may_select_access_participation? ? "$('recipient_access').value" : "'#{Conf.default_page_access}'"
-
-  # this is a little hacky: page_share_path is a nested resource of page, which makes sense. there
-  # is one specific case when we don't need a page, however, and that is when we simply want to
-  # add users in the page creation form. to ensure that the route for page_share_path generates, we ensure
-  # that the page has an ID, even if it is a dummy one.
-
-  page = @page || Page.new
-  page.id = 0 if page.id.nil?
-
-  # the remote action that is triggered when the 'add' button is pressed (or
-  # the popup item is selected).
-
-  add_action = {:url => page_share_path(page, :mode => mode, :add => true).html_safe, :method => 'put', :with => "'recipient[name]=' + $('recipient_name').value + '&recipient[access]=' + #{access_value}", :loading => spinner_icon_on('plus', add_button_id), :complete => spinner_icon_off('plus', add_button_id)}
-
-  # (1) submit the form when the enter key is pressed in the text box
-  # (2) don't submit the form if the recipient name field is empty
-  # (3) eat the event by returning false on a enter key so that the form 
-  #     is not submitted.
-
-  eat_enter = "return(!enterPressed(event));"
-  only_on_enter_press = "enterPressed(event) && $('recipient_name').value != ''"
-  key_pressed_function = remote_function(add_action.merge(:condition => only_on_enter_press)) + eat_enter;
-
-  # this is called after an item in the popup has been selected.
-  # it makes it so selecting an item is like hitting the add button
-  # we clear the recipient_name field so that we don't get a double submit
-
-  after_update_function = "function(value, data) { #{remote_function(add_action)}; $('recipient_name').value='';}"
-
-# autocomplete_tag = autocomplete_entity_tag('recipient_name', :onselect => after_update_function, :message => I18n.t(:entity_autocomplete_tip), :container => 'autocomplete_container')
- 

%table.share_page_recipient_add.full_width
  %tr
    %td#autocomplete_container{:style=>'width:100%'}
      = autocomplete_entity_field_tag('recipient_name', :style => 'width:100%', :onkeypress => key_pressed_function, :onselect => after_update_function, :message => I18n.t(:entity_autocomplete_tip), :container => 'autocomplete_container')
    %td= "&nbsp;".html_safe
    %td
      - if mode == 'share' and may_select_access_participation?
        = select_page_access 'recipient[access]', :blank => false
      - else
        = hidden_field_tag 'recipient[access]'
    %td= "&nbsp;".html_safe
    %td= link_to_remote_icon('plus', add_action, :id => add_button_id)

#share_page_recipient_area.autocomplete_results_area.p{:style => "display:none"}
  = render :partial => 'pages/shares/list_of_recipients'

