//
// vertical align an element within the center of an enclosing element
// see: http://blog.themeforest.net/tutorials/vertical-centering-with-css/
// NOTE: this only works if the enclosing element is position:relative.
//

@mixin center-vertically($height) {
  position: absolute;
  top: 50%;
  height: $height;
  margin-top: -($height/2);
  padding-top: 0;
  padding-bottom: 0;
}

// center a single line of text vertically
@mixin center-line-vertically($height) {
  height: $height;
  line-height: $height;
}

//
// An UL,LI menu that looks like a cutout and is positioned at the bottom
// of the enclosing block.
//
// This mixin is applied to the enclosing block.
//
// the markup should look like this:
//
// enclosing-block
//   ul
//     li.tab
//       a.tab
//     li.tab
//       a.tab
//
// the selector the ul is passed into this method.
//
// it is difficult to create cutout tabs with a border that look good
// in all browsers and at different client font-sizes.
//
// the problem is that the tab element needs to line up exactly with the
// bottom of the enclosing block in order to make the cutout illusion work.
// most methods of doing this create weird jitters in webkit
// and gecko when resizing the screen or changing the font size. it does not
// look so good to have a dark line under your tab, breaking the illusion of
// a cutout.
//
// the method which makes this jitter-free is to use a height and a line-height
// for the <a> tag instead of vertical padding. This requires that <a> is a block
// which requires that the <li> is block & floated, instead of inline.
//
// This method seems to produce by far the most consistant results of letting
// the active tab sit snugly on the bottom of the enclosing div.
//
// Change with caution: I spent way too much time getting this to work.
//

@mixin cutout_menu(
  $ul_id,
  $tab_margin: 10px,
  $active_color: black,
  $active_background: white,
  $active_border: false,
  $inactive_color: white,
  $inactive_background: black) {

  // allows us to put the menu at the bottom
  position: relative;

  ul##{$ul_id} {
    // allows us to put the menu at the bottom
    position: absolute;

    bottom: -1 * (border_width($active_border));

    white-space: nowrap;

    // don't add margin or padding to ul. it will mess everything up.
    margin: 0;
    padding: 0;

    li.tab {
      display: block;
      float: left;
      &.first {margin-left: $tab_margin;}
      &.last  {margin-right: $tab_margin;}
      a.tab {
        color: $inactive_color;
        background: $inactive_background;
        @include cg-hover-link;

        display: block;
        padding: 0px 1.2em; // use line height for vertical spacepadding.

        // using height and line-height makes for much more consistant rendering
        // than using vertical padding. essential to prevent tabs from looking
        // horrible at different fonts sizes.
        height: 2.5em;
        line-height: 2.5em;

        // the transparent border is needed to prevent the menu from jittering
        // when the active border is applied.
        border: 1px solid transparent;
        border-bottom: 0;

        &.active {
          color: $active_color;
          background: $active_background;
          @if $active_border {
            border: $active_border;
            border-bottom: 0;
          }
        }
      }
    }
  }

}


//
// by default, we include hover-link for all <a> tags.
// If you don't want this behavior, then you can enable hover-link here
// and it will be included in appropriate places.
//

@mixin cg-hover-link() {
  // @include hover-link;
}
